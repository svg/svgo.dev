"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[7479],{5078:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>m});var n=s(5893),o=s(1151);const r={title:"removeComments",svgo:{pluginId:"removeComments",defaultPlugin:!0,parameters:{preservePatterns:{description:'<p>An array of regular expressions (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp">RegExp</a> or string). If the comment matches any of these, including partial matches, the comment is preserved. Set to <code>false</code> to disable this behavior and remove comments indiscriminately.</p>',default:["^!"]}}}},i=void 0,c={id:"plugins/removeComments",title:"removeComments",description:"Removes XML comments from the document.",source:"@site/.svgo/docs/03-plugins/removeComments.mdx",sourceDirName:"03-plugins",slug:"/plugins/removeComments",permalink:"/docs/plugins/removeComments",draft:!1,unlisted:!1,editUrl:"https://github.com/svg/svgo/tree/main/docs/03-plugins/removeComments.mdx",tags:[],version:"current",frontMatter:{title:"removeComments",svgo:{pluginId:"removeComments",defaultPlugin:!0,parameters:{preservePatterns:{description:'<p>An array of regular expressions (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp">RegExp</a> or string). If the comment matches any of these, including partial matches, the comment is preserved. Set to <code>false</code> to disable this behavior and remove comments indiscriminately.</p>',default:["^!"]}}}},sidebar:"docsSidebar",previous:{title:"removeAttrs",permalink:"/docs/plugins/removeAttrs"},next:{title:"removeDeprecatedAttrs",permalink:"/docs/plugins/removeDeprecatedAttrs"}},a={},m=[{value:"Legal Comments",id:"legal-comments",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Removes XML comments from the document."}),"\n",(0,n.jsxs)(t.p,{children:["XML comments are the content between the ",(0,n.jsx)(t.code,{children:"\x3c!--"})," and ",(0,n.jsx)(t.code,{children:"--\x3e"})," syntax, and do not effect rendering. From an optimization perspective, these can always be safely removed."]}),"\n",(0,n.jsxs)(t.p,{children:['By default, this plugin ignores legal comments, also known as "special comments" or "protected comments". These are comments that start with an exclamation point (',(0,n.jsx)(t.code,{children:"!"}),") and are often used for legal information like copyright notices, licensing, or attribution."]}),"\n",(0,n.jsxs)(t.p,{children:["For example, the following comment can be found in ",(0,n.jsx)(t.a,{href:"https://fontawesome.com/license/free",children:"Font Awesome Free"})," icons:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-svg",children:"\x3c!--! Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --\x3e\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Removing a comment like this may be considered a breach of the license terms, as Font Awesome Free is released under ",(0,n.jsx)(t.a,{href:"https://creativecommons.org/licenses/by/4.0/",children:"CC-BY-4.0 (Creative Commons Attribution)"}),", but removing the comment would strip away that attribution."]}),"\n",(0,n.jsx)(t.h2,{id:"legal-comments",children:"Legal Comments"}),"\n",(0,n.jsx)(t.p,{children:"It's unclear if there are authoritative resources promoting this syntax for legal comments. However, the convention to preserve them based on this can be seen by a number of minification and build tools:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/clean-css/clean-css#how-to-preserve-a-comment-block",children:"clean-css"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/css/csso#syntaxcompressast-options",children:"CSSO"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://esbuild.github.io/api/#legal-comments",children:"esbuild"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://sass-lang.com/documentation/syntax/comments/",children:"Sass"})}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/terser/terser#keeping-copyright-notices-or-other-comments",children:"Terser"})," / ",(0,n.jsx)(t.a,{href:"https://github.com/webpack-contrib/terser-webpack-plugin#preserve-comments",children:"terser-webpack-plugin"})]}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/mishoo/UglifyJS#keeping-copyright-notices-or-other-comments",children:"UglifyJS"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/yui/yuicompressor#notes",children:"YUI Compressor"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>c,a:()=>i});var n=s(7294);const o={},r=n.createContext(o);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);