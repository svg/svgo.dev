"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[2283],{5725:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"plugins/convertTransform","title":"convertTransform","description":"Collapse multiple transforms into one, convert matrices to the short aliases, and much more.","source":"@site/.svgo/docs/04-plugins/convertTransform.mdx","sourceDirName":"04-plugins","slug":"/plugins/convertTransform","permalink":"/docs/plugins/convertTransform","draft":false,"unlisted":false,"editUrl":"https://github.com/svg/svgo/tree/main/docs/04-plugins/convertTransform.mdx","tags":[],"version":"current","frontMatter":{"title":"convertTransform","svgo":{"pluginId":"convertTransform","defaultPlugin":true,"parameters":{"convertToShorts":{"description":"<p>Convert transforms to their shorthand alternatives.</p>","default":true},"degPrecision":{"description":"<p>Number of decimal places to round degrees values to, using conventional rounding rules. Used for <code>rotate</code> and <code>skew</code>.</p>"},"floatPrecision":{"description":"<p>Number of decimal places to round to, using conventional rounding rules.</p>","default":3},"transformPrecision":{"description":"<p>Number of decimal places to round to, using conventional rounding rules.</p>","default":5},"matrixToTransform":{"description":"<p>If to decompose matrices into simple transforms. See <a href=\\"https://frederic-wang.fr/2013/12/01/decomposition-of-2d-transform-matrices/\\">Decomposition of 2D-transform matrices</a> for more context.</p>","default":true},"shortTranslate":{"description":"<p>If to shorten references to <code>translate</code> with redundant parameters to omit them. i.e. <code>translate(10 0)</code> \u2192 <code>translate(10)</code></p>","default":true},"shortScale":{"description":"<p>If to shorten references to <code>scale</code> with redundant parameters to omit them. i.e. <code>scale(2 2)</code> \u2192 <code>scale(2)</code></p>","default":true},"shortRotate":{"description":"<p>If to shorten references to <code>rotate</code> with redundant parameters to omit them. i.e. <code>translate(cx cy) rotate(a) translate(-cx -cy)</code> \u2192 <code>rotate(a cx cy)</code></p>","default":true},"removeUseless":{"description":"<p>If to remove redundant transforms like <code>translate(0)</code>, <code>skewX(0)</code>, or <code>skewY(0)</code>.</p>","default":true},"collapseIntoOne":{"description":"<p>If to multiply transforms into one.</p>","default":true}}}},"sidebar":"docsSidebar","previous":{"title":"convertStyleToAttrs","permalink":"/docs/plugins/convertStyleToAttrs"},"next":{"title":"inlineStyles","permalink":"/docs/plugins/inlineStyles"}}');var n=o(9801),s=o(8453);const a={title:"convertTransform",svgo:{pluginId:"convertTransform",defaultPlugin:!0,parameters:{convertToShorts:{description:"<p>Convert transforms to their shorthand alternatives.</p>",default:!0},degPrecision:{description:"<p>Number of decimal places to round degrees values to, using conventional rounding rules. Used for <code>rotate</code> and <code>skew</code>.</p>"},floatPrecision:{description:"<p>Number of decimal places to round to, using conventional rounding rules.</p>",default:3},transformPrecision:{description:"<p>Number of decimal places to round to, using conventional rounding rules.</p>",default:5},matrixToTransform:{description:'<p>If to decompose matrices into simple transforms. See <a href="https://frederic-wang.fr/2013/12/01/decomposition-of-2d-transform-matrices/">Decomposition of 2D-transform matrices</a> for more context.</p>',default:!0},shortTranslate:{description:"<p>If to shorten references to <code>translate</code> with redundant parameters to omit them. i.e. <code>translate(10 0)</code> \u2192 <code>translate(10)</code></p>",default:!0},shortScale:{description:"<p>If to shorten references to <code>scale</code> with redundant parameters to omit them. i.e. <code>scale(2 2)</code> \u2192 <code>scale(2)</code></p>",default:!0},shortRotate:{description:"<p>If to shorten references to <code>rotate</code> with redundant parameters to omit them. i.e. <code>translate(cx cy) rotate(a) translate(-cx -cy)</code> \u2192 <code>rotate(a cx cy)</code></p>",default:!0},removeUseless:{description:"<p>If to remove redundant transforms like <code>translate(0)</code>, <code>skewX(0)</code>, or <code>skewY(0)</code>.</p>",default:!0},collapseIntoOne:{description:"<p>If to multiply transforms into one.</p>",default:!0}}}},c=void 0,i={},d=[];function l(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,n.Y)(t.p,{children:"Collapse multiple transforms into one, convert matrices to the short aliases, and much more."})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.Y)(t,{...e,children:(0,n.Y)(l,{...e})}):l(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>c});var r=o(1098);const n={},s=r.default.createContext(n);function a(e){const t=r.default.useContext(s);return r.default.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.default.createElement(s.Provider,{value:t},e.children)}}}]);