"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[7938],{8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var o=n(1098);const s={},r=o.default.createContext(s);function i(e){const t=o.default.useContext(r);return o.default.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.default.createElement(r.Provider,{value:t},e.children)}},9880:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"plugins/removeComments","title":"removeComments","description":"Removes XML comments from the document.","source":"@site/.svgo/docs/04-plugins/removeComments.mdx","sourceDirName":"04-plugins","slug":"/plugins/removeComments","permalink":"/docs/plugins/removeComments","draft":false,"unlisted":false,"editUrl":"https://github.com/svg/svgo/tree/main/docs/04-plugins/removeComments.mdx","tags":[],"version":"current","frontMatter":{"title":"removeComments","svgo":{"pluginId":"removeComments","defaultPlugin":true,"parameters":{"preservePatterns":{"description":"<p>An array of regular expressions (<a href=\\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp\\">RegExp</a> or string). If the comment matches any of these, including partial matches, the comment is preserved. Set to <code>false</code> to disable this behavior and remove comments indiscriminately.</p>","default":["^!"]}}}},"sidebar":"docsSidebar","previous":{"title":"removeAttrs","permalink":"/docs/plugins/removeAttrs"},"next":{"title":"removeDeprecatedAttrs","permalink":"/docs/plugins/removeDeprecatedAttrs"}}');var s=n(9801),r=n(8453);const i={title:"removeComments",svgo:{pluginId:"removeComments",defaultPlugin:!0,parameters:{preservePatterns:{description:'<p>An array of regular expressions (<a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp">RegExp</a> or string). If the comment matches any of these, including partial matches, the comment is preserved. Set to <code>false</code> to disable this behavior and remove comments indiscriminately.</p>',default:["^!"]}}}},c=void 0,a={},m=[{value:"Legal Comments",id:"legal-comments",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.FD)(s.FK,{children:[(0,s.Y)(t.p,{children:"Removes XML comments from the document."}),"\n",(0,s.FD)(t.p,{children:["XML comments are the content between the ",(0,s.Y)(t.code,{children:"\x3c!--"})," and ",(0,s.Y)(t.code,{children:"--\x3e"})," syntax, and do not effect rendering. From an optimization perspective, these can always be safely removed."]}),"\n",(0,s.FD)(t.p,{children:['By default, this plugin ignores legal comments, also known as "special comments" or "protected comments". These are comments that start with an exclamation point (',(0,s.Y)(t.code,{children:"!"}),") and are often used for legal information like copyright notices, licensing, or attribution."]}),"\n",(0,s.FD)(t.p,{children:["For example, the following comment can be found in ",(0,s.Y)(t.a,{href:"https://fontawesome.com/license/free",children:"Font Awesome Free"})," icons:"]}),"\n",(0,s.Y)(t.pre,{children:(0,s.Y)(t.code,{className:"language-svg",children:"\x3c!--! Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --\x3e\n"})}),"\n",(0,s.FD)(t.p,{children:["Removing a comment like this may be considered a breach of the license terms, as Font Awesome Free is released under ",(0,s.Y)(t.a,{href:"https://creativecommons.org/licenses/by/4.0/",children:"CC-BY-4.0 (Creative Commons Attribution)"}),", but removing the comment would strip away that attribution."]}),"\n",(0,s.Y)(t.h2,{id:"legal-comments",children:"Legal Comments"}),"\n",(0,s.Y)(t.p,{children:"It's unclear if there are authoritative resources promoting this syntax for legal comments. However, the convention to preserve them based on this can be seen by a number of minification and build tools:"}),"\n",(0,s.FD)(t.ul,{children:["\n",(0,s.Y)(t.li,{children:(0,s.Y)(t.a,{href:"https://github.com/clean-css/clean-css#how-to-preserve-a-comment-block",children:"clean-css"})}),"\n",(0,s.Y)(t.li,{children:(0,s.Y)(t.a,{href:"https://github.com/css/csso#syntaxcompressast-options",children:"CSSO"})}),"\n",(0,s.Y)(t.li,{children:(0,s.Y)(t.a,{href:"https://esbuild.github.io/api/#legal-comments",children:"esbuild"})}),"\n",(0,s.Y)(t.li,{children:(0,s.Y)(t.a,{href:"https://sass-lang.com/documentation/syntax/comments/",children:"Sass"})}),"\n",(0,s.FD)(t.li,{children:[(0,s.Y)(t.a,{href:"https://github.com/terser/terser#keeping-copyright-notices-or-other-comments",children:"Terser"})," / ",(0,s.Y)(t.a,{href:"https://github.com/webpack-contrib/terser-webpack-plugin#preserve-comments",children:"terser-webpack-plugin"})]}),"\n",(0,s.Y)(t.li,{children:(0,s.Y)(t.a,{href:"https://github.com/mishoo/UglifyJS#keeping-copyright-notices-or-other-comments",children:"UglifyJS"})}),"\n",(0,s.Y)(t.li,{children:(0,s.Y)(t.a,{href:"https://github.com/yui/yuicompressor#notes",children:"YUI Compressor"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.Y)(t,{...e,children:(0,s.Y)(l,{...e})}):l(e)}}}]);