"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[640],{7059:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"plugins/removeAttrs","title":"removeAttrs","description":"Remove attributes from elements matching a custom syntax.","source":"@site/.svgo/docs/04-plugins/removeAttrs.mdx","sourceDirName":"04-plugins","slug":"/plugins/removeAttrs","permalink":"/docs/plugins/removeAttrs","draft":false,"unlisted":false,"editUrl":"https://github.com/svg/svgo/tree/main/docs/04-plugins/removeAttrs.mdx","tags":[],"version":"current","frontMatter":{"title":"removeAttrs","svgo":{"pluginId":"removeAttrs","parameters":{"attrs":{"description":"<p>A selector that matches attributes.</p>","default":null},"elemSeparator":{"description":"<p>The pattern syntax used by this plugin is <code>element:attribute:value</code>, this changes the delimiter from <code>:</code> to another string.</p>","default":":"},"preserveCurrentColor":{"description":"<p>If to ignore the attribute when it\'s set to <code>currentColor</code>.</p>","default":false}}}},"sidebar":"docsSidebar","previous":{"title":"removeAttributesBySelector","permalink":"/docs/plugins/removeAttributesBySelector"},"next":{"title":"removeComments","permalink":"/docs/plugins/removeComments"}}');var n=s(4848),o=s(8453);const i={title:"removeAttrs",svgo:{pluginId:"removeAttrs",parameters:{attrs:{description:"<p>A selector that matches attributes.</p>",default:null},elemSeparator:{description:"<p>The pattern syntax used by this plugin is <code>element:attribute:value</code>, this changes the delimiter from <code>:</code> to another string.</p>",default:":"},preserveCurrentColor:{description:"<p>If to ignore the attribute when it's set to <code>currentColor</code>.</p>",default:!1}}}},l=void 0,a={},c=[];function u(e){const t={code:"code",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Remove attributes from elements matching a custom syntax."}),"\n",(0,n.jsxs)(t.p,{children:["The format accepted is ",(0,n.jsx)(t.code,{children:"[ element* : attribute* : value* ]"}),", where:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"element"}),": A regular expression matching element names. An asterisk or omission matches all elements."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"attribute"}),": A regular expression matching attribute names."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"value"}),": A regular expression matching attribute values. An asterisk or omission matches all values."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["For example, ",(0,n.jsx)(t.code,{children:"path:fill"})," matches all ",(0,n.jsx)(t.code,{children:"fill"})," attributes in ",(0,n.jsx)(t.code,{children:"<path>"})," elements."]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var r=s(6540);const n={},o=r.createContext(n);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);