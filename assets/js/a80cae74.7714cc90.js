"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[6498],{3882:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var n=o(5893),a=o(1151);const s={title:"removeUnknownsAndDefaults",svgo:{pluginId:"removeUnknownsAndDefaults",defaultPlugin:!0,parameters:{unknownContent:{description:"<p>If to remove elements that are not known or can't be the child of the parent element according.</p>",default:!0},unknownAttrs:{description:"<p>If to remove attributes that are not assignable to the respective element.</p>",default:!0},defaultAttrs:{description:"<p>If to remove attributes that are assigned their default value anyway.</p>",default:!0},defaultMarkupDeclarations:{description:"<p>If to remove XML declarations that are assigned their default value. XML declarations are the properties in the <code>&#x3C;?xml \u2026 ?></code> block at the top of the document.</p>",default:!0},uselessOverrides:{description:"<p>If to remove attributes that are being if the same value is being inherited by it's parent element anyway.</p>",default:!0},keepDataAttrs:{description:'<p>If to keep <a href="https://developer.mozilla.org/docs/Web/SVG/Attribute/data-*"><code>data-*</code></a> attributes.</p>',default:!0},keepAriaAttrs:{description:'<p>If to keep <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA">ARIA (Accessible Rich Internet Applications)</a> attributes, used for accessibility. This excludes <code>role</code>, which is managed with the <code>keepRoleAttr</code> parameter.</p>',default:!0},keepRoleAttr:{description:'<p>If to keep the ARIA <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles"><code>role</code></a> attribute.</p>',default:!1}}}},r=void 0,i={id:"plugins/removeUnknownsAndDefaults",title:"removeUnknownsAndDefaults",description:"Removes unknown elements and attributes, as well as attributes that are set to their default value.",source:"@site/.svgo/docs/03-plugins/removeUnknownsAndDefaults.mdx",sourceDirName:"03-plugins",slug:"/plugins/removeUnknownsAndDefaults",permalink:"/docs/plugins/removeUnknownsAndDefaults",draft:!1,unlisted:!1,editUrl:"https://github.com/svg/svgo/tree/main/docs/03-plugins/removeUnknownsAndDefaults.mdx",tags:[],version:"current",frontMatter:{title:"removeUnknownsAndDefaults",svgo:{pluginId:"removeUnknownsAndDefaults",defaultPlugin:!0,parameters:{unknownContent:{description:"<p>If to remove elements that are not known or can't be the child of the parent element according.</p>",default:!0},unknownAttrs:{description:"<p>If to remove attributes that are not assignable to the respective element.</p>",default:!0},defaultAttrs:{description:"<p>If to remove attributes that are assigned their default value anyway.</p>",default:!0},defaultMarkupDeclarations:{description:"<p>If to remove XML declarations that are assigned their default value. XML declarations are the properties in the <code>&#x3C;?xml \u2026 ?></code> block at the top of the document.</p>",default:!0},uselessOverrides:{description:"<p>If to remove attributes that are being if the same value is being inherited by it's parent element anyway.</p>",default:!0},keepDataAttrs:{description:'<p>If to keep <a href="https://developer.mozilla.org/docs/Web/SVG/Attribute/data-*"><code>data-*</code></a> attributes.</p>',default:!0},keepAriaAttrs:{description:'<p>If to keep <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA">ARIA (Accessible Rich Internet Applications)</a> attributes, used for accessibility. This excludes <code>role</code>, which is managed with the <code>keepRoleAttr</code> parameter.</p>',default:!0},keepRoleAttr:{description:'<p>If to keep the ARIA <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles"><code>role</code></a> attribute.</p>',default:!1}}}},sidebar:"docsSidebar",previous:{title:"removeTitle",permalink:"/docs/plugins/removeTitle"},next:{title:"removeUnusedNS",permalink:"/docs/plugins/removeUnusedNS"}},l={},d=[];function c(e){const t={a:"a",code:"code",p:"p",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Removes unknown elements and attributes, as well as attributes that are set to their default value."}),"\n",(0,n.jsxs)(t.p,{children:["This can also remove defaults from the XML declaration if present in the document, namely ",(0,n.jsx)(t.a,{href:"https://www.w3.org/TR/REC-xml/#sec-rmd",children:(0,n.jsx)(t.code,{children:"standalone"})})," if it's set to ",(0,n.jsx)(t.code,{children:"no"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>i,a:()=>r});var n=o(7294);const a={},s=n.createContext(a);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);