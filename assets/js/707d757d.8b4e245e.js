"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[946],{7441:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"plugins/removeUnknownsAndDefaults","title":"removeUnknownsAndDefaults","description":"Removes unknown elements and attributes, as well as attributes that are set to their default value.","source":"@site/.svgo/docs/04-plugins/removeUnknownsAndDefaults.mdx","sourceDirName":"04-plugins","slug":"/plugins/removeUnknownsAndDefaults","permalink":"/docs/plugins/removeUnknownsAndDefaults","draft":false,"unlisted":false,"editUrl":"https://github.com/svg/svgo/tree/main/docs/04-plugins/removeUnknownsAndDefaults.mdx","tags":[],"version":"current","frontMatter":{"title":"removeUnknownsAndDefaults","svgo":{"pluginId":"removeUnknownsAndDefaults","defaultPlugin":true,"parameters":{"unknownContent":{"description":"<p>If to remove elements that are not known or can\'t be the child of the parent element according.</p>","default":true},"unknownAttrs":{"description":"<p>If to remove attributes that are not assignable to the respective element.</p>","default":true},"defaultAttrs":{"description":"<p>If to remove attributes that are assigned their default value anyway.</p>","default":true},"defaultMarkupDeclarations":{"description":"<p>If to remove XML declarations that are assigned their default value. XML declarations are the properties in the <code>&#x3C;?xml \u2026 ?></code> block at the top of the document.</p>","default":true},"uselessOverrides":{"description":"<p>If to remove attributes that are being if the same value is being inherited by it\'s parent element anyway.</p>","default":true},"keepDataAttrs":{"description":"<p>If to keep <a href=\\"https://developer.mozilla.org/docs/Web/SVG/Attribute/data-*\\"><code>data-*</code></a> attributes.</p>","default":true},"keepAriaAttrs":{"description":"<p>If to keep <a href=\\"https://developer.mozilla.org/docs/Web/Accessibility/ARIA\\">ARIA (Accessible Rich Internet Applications)</a> attributes, used for accessibility. This excludes <code>role</code>, which is managed with the <code>keepRoleAttr</code> parameter.</p>","default":true},"keepRoleAttr":{"description":"<p>If to keep the ARIA <a href=\\"https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles\\"><code>role</code></a> attribute.</p>","default":false}}}},"sidebar":"docsSidebar","previous":{"title":"removeTitle","permalink":"/docs/plugins/removeTitle"},"next":{"title":"removeUnusedNS","permalink":"/docs/plugins/removeUnusedNS"}}');var n=o(9801),r=o(8453);const s={title:"removeUnknownsAndDefaults",svgo:{pluginId:"removeUnknownsAndDefaults",defaultPlugin:!0,parameters:{unknownContent:{description:"<p>If to remove elements that are not known or can't be the child of the parent element according.</p>",default:!0},unknownAttrs:{description:"<p>If to remove attributes that are not assignable to the respective element.</p>",default:!0},defaultAttrs:{description:"<p>If to remove attributes that are assigned their default value anyway.</p>",default:!0},defaultMarkupDeclarations:{description:"<p>If to remove XML declarations that are assigned their default value. XML declarations are the properties in the <code>&#x3C;?xml \u2026 ?></code> block at the top of the document.</p>",default:!0},uselessOverrides:{description:"<p>If to remove attributes that are being if the same value is being inherited by it's parent element anyway.</p>",default:!0},keepDataAttrs:{description:'<p>If to keep <a href="https://developer.mozilla.org/docs/Web/SVG/Attribute/data-*"><code>data-*</code></a> attributes.</p>',default:!0},keepAriaAttrs:{description:'<p>If to keep <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA">ARIA (Accessible Rich Internet Applications)</a> attributes, used for accessibility. This excludes <code>role</code>, which is managed with the <code>keepRoleAttr</code> parameter.</p>',default:!0},keepRoleAttr:{description:'<p>If to keep the ARIA <a href="https://developer.mozilla.org/docs/Web/Accessibility/ARIA/Roles"><code>role</code></a> attribute.</p>',default:!1}}}},i=void 0,l={},d=[];function c(e){const t={a:"a",code:"code",p:"p",...(0,r.R)(),...e.components};return(0,n.FD)(n.FK,{children:[(0,n.Y)(t.p,{children:"Removes unknown elements and attributes, as well as attributes that are set to their default value."}),"\n",(0,n.FD)(t.p,{children:["This can also remove defaults from the XML declaration if present in the document, namely ",(0,n.Y)(t.a,{href:"https://www.w3.org/TR/REC-xml/#sec-rmd",children:(0,n.Y)(t.code,{children:"standalone"})})," if it's set to ",(0,n.Y)(t.code,{children:"no"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.Y)(t,{...e,children:(0,n.Y)(c,{...e})}):c(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>i});var a=o(1098);const n={},r=a.default.createContext(n);function s(e){const t=a.default.useContext(r);return a.default.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.default.createElement(r.Provider,{value:t},e.children)}}}]);