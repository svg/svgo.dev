"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[6583],{574:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"plugins/convertPathData","title":"convertPathData","description":"Optimize path commands found in `, , and  elements. Path commands are the syntax used in the d` attribute, each character represents an instruction to draw paths.","source":"@site/.svgo/docs/04-plugins/convertPathData.mdx","sourceDirName":"04-plugins","slug":"/plugins/convertPathData","permalink":"/docs/plugins/convertPathData","draft":false,"unlisted":false,"editUrl":"https://github.com/svg/svgo/tree/main/docs/04-plugins/convertPathData.mdx","tags":[],"version":"current","frontMatter":{"title":"convertPathData","svgo":{"pluginId":"convertPathData","defaultPlugin":true,"parameters":{"applyTransforms":{"description":"<p>If to apply transforms.</p>","default":true},"applyTransformsStroked":{"description":"<p>If to apply transforms to paths with a stroke.</p>","default":true},"makeArcs":{"description":"<p>If to convert from curves to arcs when possible. This is an object with two properties, <code>threshold</code> and <code>tolerance</code>.</p>"},"straightCurves":{"description":"<p>If to convert curve commands that are effectively straight lines to line commands.</p>","default":true},"convertToQ":{"description":"<p>If to convert cubic B\xe9zier curves to quadratic B\xe9zier curves when they effectively are.</p>","default":true},"lineShorthands":{"description":"<p>If to convert regular lines to an explicit horizontal or vertical line where possible.</p>","default":true},"convertToZ":{"description":"<p>If to convert lines that go to the start to a <code>z</code> command.</p>","default":true},"curveSmoothShorthands":{"description":"<p>If to convert curves to smooth curves where possible.</p>","default":true},"floatPrecision":{"description":"<p>Number of decimal places to round to, using conventional rounding rules.</p>","default":3},"transformPrecision":{"description":"<p>Number of decimal places to round to, using conventional rounding rules.</p>","default":5},"smartArcRounding":{"description":"<p>Round the radius of circular arcs when the effective change is under the error. The effective change is determined using the <a href=\\"https://wikipedia.org/wiki/Sagitta_(geometry)\\">sagitta</a> of the arc.</p>","default":true},"removeUseless":{"description":"<p>Remove redundant path commands that don\'t draw anything.</p>","default":true},"collapseRepeated":{"description":"<p>Collapse repeated commands when they can be merged into one.</p>","default":true},"utilizeAbsolute":{"description":"<p>If to convert between absolute or relative coordinates, whichever is shortest.</p>","default":true},"negativeExtraSpace":{"default":true},"forceAbsolutePath":{"description":"<p>If to always convert to absolute coordinates, even if it adds more bytes.</p>","default":false}}}},"sidebar":"docsSidebar","previous":{"title":"convertOneStopGradients","permalink":"/docs/plugins/convertOneStopGradients"},"next":{"title":"convertShapeToPath","permalink":"/docs/plugins/convertShapeToPath"}}');var r=o(4848),a=o(8453);const i={title:"convertPathData",svgo:{pluginId:"convertPathData",defaultPlugin:!0,parameters:{applyTransforms:{description:"<p>If to apply transforms.</p>",default:!0},applyTransformsStroked:{description:"<p>If to apply transforms to paths with a stroke.</p>",default:!0},makeArcs:{description:"<p>If to convert from curves to arcs when possible. This is an object with two properties, <code>threshold</code> and <code>tolerance</code>.</p>"},straightCurves:{description:"<p>If to convert curve commands that are effectively straight lines to line commands.</p>",default:!0},convertToQ:{description:"<p>If to convert cubic B\xe9zier curves to quadratic B\xe9zier curves when they effectively are.</p>",default:!0},lineShorthands:{description:"<p>If to convert regular lines to an explicit horizontal or vertical line where possible.</p>",default:!0},convertToZ:{description:"<p>If to convert lines that go to the start to a <code>z</code> command.</p>",default:!0},curveSmoothShorthands:{description:"<p>If to convert curves to smooth curves where possible.</p>",default:!0},floatPrecision:{description:"<p>Number of decimal places to round to, using conventional rounding rules.</p>",default:3},transformPrecision:{description:"<p>Number of decimal places to round to, using conventional rounding rules.</p>",default:5},smartArcRounding:{description:'<p>Round the radius of circular arcs when the effective change is under the error. The effective change is determined using the <a href="https://wikipedia.org/wiki/Sagitta_(geometry)">sagitta</a> of the arc.</p>',default:!0},removeUseless:{description:"<p>Remove redundant path commands that don't draw anything.</p>",default:!0},collapseRepeated:{description:"<p>Collapse repeated commands when they can be merged into one.</p>",default:!0},utilizeAbsolute:{description:"<p>If to convert between absolute or relative coordinates, whichever is shortest.</p>",default:!0},negativeExtraSpace:{default:!0},forceAbsolutePath:{description:"<p>If to always convert to absolute coordinates, even if it adds more bytes.</p>",default:!1}}}},s=void 0,c={},d=[];function l(e){const t={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Optimize path commands found in ",(0,r.jsx)(t.code,{children:"<path>"}),", ",(0,r.jsx)(t.code,{children:"<glyph>"}),", and ",(0,r.jsx)(t.code,{children:"<missing-glyph>"})," elements. Path commands are the syntax used in the ",(0,r.jsx)(t.code,{children:"d"})," attribute, each character represents an instruction to draw paths."]}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["You can get more context on path commands on ",(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/docs/Web/SVG/Attribute/d#path_commands",children:"MDN Web Docs"}),"."]})}),"\n",(0,r.jsx)(t.p,{children:"This plugin uses multiple techniques to either reduce the number of instructions or reduce the attribute length:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Convert between relative or absolute coordinates, whichever is shortest."}),"\n",(0,r.jsx)(t.li,{children:"Convert between commands. For example, a B\xe9zier curve that behaves like a straight line might as well use a line instruction."}),"\n",(0,r.jsx)(t.li,{children:"Remove redundant commands. For example, a command that moves to the current position can be removed."}),"\n",(0,r.jsx)(t.li,{children:"Trim redundant delimiters and leading zeros."}),"\n",(0,r.jsx)(t.li,{children:"Round numeric values using conventional rounding rules."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"You can read more about the plugins capabilities by going through the individual parameters."})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>s});var n=o(6540);const r={},a=n.createContext(r);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);