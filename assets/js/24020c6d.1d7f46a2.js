"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[5494],{8453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>r});var n=s(6540);const o={},i=n.createContext(o);function l(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(i.Provider,{value:t},e.children)}},9209:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"plugins/inlineStyles","title":"inlineStyles","description":"Merges styles from ` elements to the style` attribute of matching elements.","source":"@site/.svgo/docs/04-plugins/inlineStyles.mdx","sourceDirName":"04-plugins","slug":"/plugins/inlineStyles","permalink":"/docs/plugins/inlineStyles","draft":false,"unlisted":false,"editUrl":"https://github.com/svg/svgo/tree/main/docs/04-plugins/inlineStyles.mdx","tags":[],"version":"current","frontMatter":{"title":"inlineStyles","svgo":{"pluginId":"inlineStyles","defaultPlugin":true,"parameters":{"onlyMatchedOnce":{"description":"<p>If to only inline styles if the selector matches one element.</p>","default":true},"removeMatchedSelectors":{"description":"<p>If to remove the selector and styles from the stylesheet while inlining the styles. This does not remove selectors that did not match any elements.</p>","default":true},"useMqs":{"description":"<p>An array of media query conditions to use, such as <code>screen</code>. An empty string signifies all selectors outside of a media query.</p>"},"usePseudos":{"description":"<p>What pseudo-classes and pseudo-elements to use. An empty string signifies all non-pseudo-classes and non-pseudo-elements.</p>"}}}},"sidebar":"docsSidebar","previous":{"title":"convertTransform","permalink":"/docs/plugins/convertTransform"},"next":{"title":"mergePaths","permalink":"/docs/plugins/mergePaths"}}');var o=s(4848),i=s(8453);const l={title:"inlineStyles",svgo:{pluginId:"inlineStyles",defaultPlugin:!0,parameters:{onlyMatchedOnce:{description:"<p>If to only inline styles if the selector matches one element.</p>",default:!0},removeMatchedSelectors:{description:"<p>If to remove the selector and styles from the stylesheet while inlining the styles. This does not remove selectors that did not match any elements.</p>",default:!0},useMqs:{description:"<p>An array of media query conditions to use, such as <code>screen</code>. An empty string signifies all selectors outside of a media query.</p>"},usePseudos:{description:"<p>What pseudo-classes and pseudo-elements to use. An empty string signifies all non-pseudo-classes and non-pseudo-elements.</p>"}}}},r=void 0,c={},a=[];function d(e){const t={code:"code",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(t.p,{children:["Merges styles from ",(0,o.jsx)(t.code,{children:"<style>"})," elements to the ",(0,o.jsx)(t.code,{children:"style"})," attribute of matching elements."]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);