"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[9118],{5942:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=n(5893),r=n(1151);const s={title:"convertStyleToAttrs",svgo:{pluginId:"convertStyleToAttrs",parameters:{keepImportant:{description:'<p>If to always keep <a href="https://developer.mozilla.org/docs/Web/CSS/important"><code>!important</code></a> styles.</p>',type:"boolean",default:!1}}}},i=void 0,a={id:"plugins/convertStyleToAttrs",title:"convertStyleToAttrs",description:"Converts presentation attributes in element styles to the equvilent XML attribute.",source:"@site/.svgo/docs/03-plugins/convertStyleToAttrs.mdx",sourceDirName:"03-plugins",slug:"/plugins/convertStyleToAttrs",permalink:"/docs/plugins/convertStyleToAttrs",draft:!1,unlisted:!1,editUrl:"https://github.com/svg/svgo/tree/main/docs/03-plugins/convertStyleToAttrs.mdx",tags:[],version:"current",frontMatter:{title:"convertStyleToAttrs",svgo:{pluginId:"convertStyleToAttrs",parameters:{keepImportant:{description:'<p>If to always keep <a href="https://developer.mozilla.org/docs/Web/CSS/important"><code>!important</code></a> styles.</p>',type:"boolean",default:!1}}}},sidebar:"docsSidebar",previous:{title:"convertShapeToPath",permalink:"/docs/plugins/convertShapeToPath"},next:{title:"convertTransform",permalink:"/docs/plugins/convertTransform"}},l={},c=[];function p(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Converts ",(0,o.jsx)(t.a,{href:"https://developer.mozilla.org/docs/Web/SVG/Attribute/Presentation",children:"presentation attributes"})," in element styles to the equvilent XML attribute."]}),"\n",(0,o.jsx)(t.p,{children:"Presentation attributes can be used in both attributes and styles, but in most cases it'll take fewer bytes to use attributes. Consider the following:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-xml",children:'<rect width="100" height="100" style="fill:red"/>\n\x3c!-- vs --\x3e\n<rect width="100" height="100" fill="red"/>\n'})}),"\n",(0,o.jsxs)(t.p,{children:["However, because the ",(0,o.jsx)(t.code,{children:"style"})," attribute doesn't require quotes between values, given enough presentation attributes, it can increase the size of the document:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-xml",children:'<rect width="100" height="100" style="fill:red;opacity:.5;stroke-dasharray:1;stroke:blue;stroke-opacity:.5"/>\n\x3c!-- vs --\x3e\n<rect width="100" height="100" fill="red" opacity=".5" stroke-dasharray="1" stroke="blue" stroke-opacity=".5"/>\n'})})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>i});var o=n(7294);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);