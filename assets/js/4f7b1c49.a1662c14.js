"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[5933],{4617:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var o=s(5893),r=s(1151);const n={title:"removeUselessStrokeAndFill",svgo:{pluginId:"removeUselessStrokeAndFill",defaultPlugin:!0,parameters:{stroke:{description:"<p>If to remove redundant strokes.</p>",default:!0},fill:{description:"<p>If to remove redundant fills.</p>",default:!0},removeNone:{description:"<p>If to remove elements where both the <code>fill</code> and <code>stroke</code> attributes are <code>none</code>.</p>",default:!1}}}},i=void 0,l={id:"plugins/removeUselessStrokeAndFill",title:"removeUselessStrokeAndFill",description:"Removes useless stroke and fill attributes.",source:"@site/.svgo/docs/03-plugins/removeUselessStrokeAndFill.mdx",sourceDirName:"03-plugins",slug:"/plugins/removeUselessStrokeAndFill",permalink:"/docs/plugins/removeUselessStrokeAndFill",draft:!1,unlisted:!1,editUrl:"https://github.com/svg/svgo/tree/main/docs/03-plugins/removeUselessStrokeAndFill.mdx",tags:[],version:"current",frontMatter:{title:"removeUselessStrokeAndFill",svgo:{pluginId:"removeUselessStrokeAndFill",defaultPlugin:!0,parameters:{stroke:{description:"<p>If to remove redundant strokes.</p>",default:!0},fill:{description:"<p>If to remove redundant fills.</p>",default:!0},removeNone:{description:"<p>If to remove elements where both the <code>fill</code> and <code>stroke</code> attributes are <code>none</code>.</p>",default:!1}}}},sidebar:"docsSidebar",previous:{title:"removeUselessDefs",permalink:"/docs/plugins/removeUselessDefs"},next:{title:"removeViewBox",permalink:"/docs/plugins/removeViewBox"}},d={},c=[];function a(e){const t={a:"a",code:"code",p:"p",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Removes useless ",(0,o.jsx)(t.code,{children:"stroke"})," and ",(0,o.jsx)(t.code,{children:"fill"})," attributes."]}),"\n",(0,o.jsxs)(t.p,{children:["Assigning these attributes can sometimes change nothing in the document. For example, in most cases assigning a ",(0,o.jsx)(t.code,{children:"stroke"})," color is redundant if the elements ",(0,o.jsx)(t.a,{href:"https://developer.mozilla.org/docs/Web/SVG/Attribute/stroke-width",children:(0,o.jsx)(t.code,{children:"stroke-width"})})," or ",(0,o.jsx)(t.a,{href:"https://developer.mozilla.org/docs/Web/SVG/Attribute/stroke-opacity",children:(0,o.jsx)(t.code,{children:"stroke-opacity"})})," is ",(0,o.jsx)(t.code,{children:"0"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>l,a:()=>i});var o=s(7294);const r={},n=o.createContext(r);function i(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);