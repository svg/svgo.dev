"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[9174],{6538:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"plugins-api","title":"Plugin Architecture","description":"SVGO is primarily an optimizer, and is evolving as the community continue to propose or implement better optimizations.","source":"@site/.svgo/docs/05-plugins-api.mdx","sourceDirName":".","slug":"/plugins-api","permalink":"/docs/plugins-api","draft":false,"unlisted":false,"editUrl":"https://github.com/svg/svgo/tree/main/docs/05-plugins-api.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Plugin Architecture"},"sidebar":"docsSidebar","previous":{"title":"sortDefsChildren","permalink":"/docs/plugins/sortDefsChildren"},"next":{"title":"Migration from v3 to v4","permalink":"/docs/migrations/migration-from-v3-to-v4"}}');var o=t(4848),r=t(8453);const s={title:"Plugin Architecture"},a=void 0,l={},c=[{value:"Common Operations",id:"common-operations",level:2}];function d(n){const e={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:"SVGO is primarily an optimizer, and is evolving as the community continue to propose or implement better optimizations."}),"\n",(0,o.jsxs)(e.p,{children:["Since SVGO v2, our plugins API use the ",(0,o.jsx)(e.a,{href:"https://github.com/syntax-tree/xast",children:"xast"})," specification, and the more practical visitor pattern."]}),"\n",(0,o.jsx)(e.p,{children:"A minimal plugin looks like this:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"export const myPlugin = {\n  name: 'myPlugin',\n  description: 'A plugin that does nothing.',\n  fn: () => {},\n};\n"})}),"\n",(0,o.jsxs)(e.p,{children:["It currently does nothing, but can still be referenced in your ",(0,o.jsx)(e.code,{children:"svgo.config.js"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"import { myPlugin } from './myPlugin.js';\n\nexport default {\n  plugins: [myPlugin],\n};\n"})}),"\n",(0,o.jsx)(e.p,{children:"The visitor pattern lets you to access nodes as the parser enters and exits them, in the order that the respective tag appears."}),"\n",(0,o.jsx)(e.p,{children:"The following JavaScript shows all of the types of nodes you can implement a callback for, which all callbacks are optional."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"const myPlugin = {\n  name: 'pluginName',\n  description: 'A plugin that does a lot of nothing.',\n  fn: () => {\n    return {\n      root: {\n        enter: (node) => {},\n        exit: (node) => {},\n      },\n      element: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {},\n      },\n      doctype: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {},\n      },\n      instruction: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {},\n      },\n      comment: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {},\n      },\n      cdata: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {},\n      },\n      text: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {},\n      },\n    };\n  },\n};\n"})}),"\n",(0,o.jsx)(e.p,{children:"Where a parent node is present, it will always be a direct child of the current node."}),"\n",(0,o.jsx)(e.h2,{id:"common-operations",children:"Common Operations"}),"\n",(0,o.jsx)(e.p,{children:"Finding specific nodes to modify their attributes:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"const myPlugin = {\n  name: 'makeEverythingPink',\n  description: 'Change all fill attribute values to pink.',\n  fn: () => {\n    return {\n      element: {\n        enter: (node, parentNode) => {\n          if (node.attributes.fill == null) {\n            return;\n          }\n\n          node.attributes.fill = 'pink';\n        },\n      },\n    };\n  },\n};\n"})}),"\n",(0,o.jsx)(e.p,{children:"Remove a node from its parent:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"const removeNoAttributes = {\n  name: 'removeNoAttributes',\n  description: 'Removes nodes with no attributes.',\n  fn: () => {\n    return {\n      element: {\n        enter: (node, parentNode) => {\n          if (Object.keys(node.attributes).length !== 0) {\n            return;\n          }\n\n          parentNode.children = parentNode.children.filter(\n            (child) => child !== node,\n          );\n        },\n      },\n    };\n  },\n};\n"})})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);