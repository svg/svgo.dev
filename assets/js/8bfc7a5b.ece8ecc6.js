"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[6992],{9602:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=t(5893),n=t(1151);const s={title:"convertTransform",svgo:{pluginId:"convertTransform",defaultPlugin:!0,parameters:{convertToShorts:{description:"<p>Convert transforms to their shorthand alternatives.</p>",default:!0},degPrecision:{description:"<p>Number of decimal places to round degrees values to, using conventional rounding rules. Used for <code>rotate</code> and <code>skew</code>.</p>"},floatPrecision:{description:"<p>Number of decimal places to round to, using conventional rounding rules.</p>",default:3},transformPrecision:{description:"<p>Number of decimal places to round to, using conventional rounding rules.</p>",default:5},matrixToTransform:{description:'<p>If decompose matrices into simple transforms. See <a href="https://frederic-wang.fr/decomposition-of-2d-transform-matrices.html">Decomposition of 2D-transform matrices</a> for more context.</p>',default:!0},shortTranslate:{description:"<p>If to shorten references to <code>translate</code> with redundant parameters to omit them. i.e. <code>translate(10 0)</code> \u2192 <code>translate(10)</code></p>",default:!0},shortScale:{description:"<p>If to shorten references to <code>scale</code> with redundant parameters to omit them. i.e. <code>scale(2 2)</code> \u2192 <code>scale(2)</code></p>",default:!0},shortRotate:{description:"<p>If to shorten references to <code>rotate</code> with redundant parameters to omit them. i.e. <code>translate(cx cy) rotate(a) translate(-cx -cy)</code> \u2192 <code>rotate(a cx cy)</code></p>",default:!0},removeUseless:{description:"<p>If to remove redundant transforms like <code>translate(0)</code>, <code>skewX(0)</code>, or <code>skewY(0)</code>.</p>",default:!0},collapseIntoOne:{description:"<p>If to multiply transforms into one.</p>",default:!0}}}},a=void 0,c={id:"plugins/convertTransform",title:"convertTransform",description:"Collapse multiple transforms into one, convert matrices to the short aliases, and much more.",source:"@site/.svgo/docs/03-plugins/convertTransform.mdx",sourceDirName:"03-plugins",slug:"/plugins/convertTransform",permalink:"/docs/plugins/convertTransform",draft:!1,unlisted:!1,editUrl:"https://github.com/svg/svgo/tree/main/docs/03-plugins/convertTransform.mdx",tags:[],version:"current",frontMatter:{title:"convertTransform",svgo:{pluginId:"convertTransform",defaultPlugin:!0,parameters:{convertToShorts:{description:"<p>Convert transforms to their shorthand alternatives.</p>",default:!0},degPrecision:{description:"<p>Number of decimal places to round degrees values to, using conventional rounding rules. Used for <code>rotate</code> and <code>skew</code>.</p>"},floatPrecision:{description:"<p>Number of decimal places to round to, using conventional rounding rules.</p>",default:3},transformPrecision:{description:"<p>Number of decimal places to round to, using conventional rounding rules.</p>",default:5},matrixToTransform:{description:'<p>If decompose matrices into simple transforms. See <a href="https://frederic-wang.fr/decomposition-of-2d-transform-matrices.html">Decomposition of 2D-transform matrices</a> for more context.</p>',default:!0},shortTranslate:{description:"<p>If to shorten references to <code>translate</code> with redundant parameters to omit them. i.e. <code>translate(10 0)</code> \u2192 <code>translate(10)</code></p>",default:!0},shortScale:{description:"<p>If to shorten references to <code>scale</code> with redundant parameters to omit them. i.e. <code>scale(2 2)</code> \u2192 <code>scale(2)</code></p>",default:!0},shortRotate:{description:"<p>If to shorten references to <code>rotate</code> with redundant parameters to omit them. i.e. <code>translate(cx cy) rotate(a) translate(-cx -cy)</code> \u2192 <code>rotate(a cx cy)</code></p>",default:!0},removeUseless:{description:"<p>If to remove redundant transforms like <code>translate(0)</code>, <code>skewX(0)</code>, or <code>skewY(0)</code>.</p>",default:!0},collapseIntoOne:{description:"<p>If to multiply transforms into one.</p>",default:!0}}}},sidebar:"docsSidebar",previous:{title:"convertStyleToAttrs",permalink:"/docs/plugins/convertStyleToAttrs"},next:{title:"inlineStyles",permalink:"/docs/plugins/inlineStyles"}},i={},d=[];function l(e){const o={p:"p",...(0,n.a)(),...e.components};return(0,r.jsx)(o.p,{children:"Collapse multiple transforms into one, convert matrices to the short aliases, and much more."})}function p(e={}){const{wrapper:o}={...(0,n.a)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,o,t)=>{t.d(o,{Z:()=>c,a:()=>a});var r=t(7294);const n={},s=r.createContext(n);function a(e){const o=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(s.Provider,{value:o},e.children)}}}]);