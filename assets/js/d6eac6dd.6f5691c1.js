"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[3396],{2890:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"plugins/convertStyleToAttrs","title":"convertStyleToAttrs","description":"Converts presentation attributes in element styles to the equivalent XML attribute.","source":"@site/.svgo/docs/04-plugins/convertStyleToAttrs.mdx","sourceDirName":"04-plugins","slug":"/plugins/convertStyleToAttrs","permalink":"/docs/plugins/convertStyleToAttrs","draft":false,"unlisted":false,"editUrl":"https://github.com/svg/svgo/tree/main/docs/04-plugins/convertStyleToAttrs.mdx","tags":[],"version":"current","frontMatter":{"title":"convertStyleToAttrs","svgo":{"pluginId":"convertStyleToAttrs","parameters":{"keepImportant":{"description":"<p>If to always keep <a href=\\"https://developer.mozilla.org/docs/Web/CSS/important\\"><code>!important</code></a> styles.</p>","type":"boolean","default":false}}}},"sidebar":"docsSidebar","previous":{"title":"convertShapeToPath","permalink":"/docs/plugins/convertShapeToPath"},"next":{"title":"convertTransform","permalink":"/docs/plugins/convertTransform"}}');var r=o(9801),s=o(8453);const i={title:"convertStyleToAttrs",svgo:{pluginId:"convertStyleToAttrs",parameters:{keepImportant:{description:'<p>If to always keep <a href="https://developer.mozilla.org/docs/Web/CSS/important"><code>!important</code></a> styles.</p>',type:"boolean",default:!1}}}},a=void 0,l={},c=[];function d(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.FD)(r.FK,{children:[(0,r.FD)(t.p,{children:["Converts ",(0,r.Y)(t.a,{href:"https://developer.mozilla.org/docs/Web/SVG/Attribute/Presentation",children:"presentation attributes"})," in element styles to the equivalent XML attribute."]}),"\n",(0,r.Y)(t.p,{children:"Presentation attributes can be used in both attributes and styles, but in most cases it'll take fewer bytes to use attributes. Consider the following:"}),"\n",(0,r.Y)(t.pre,{children:(0,r.Y)(t.code,{className:"language-xml",children:'<rect width="100" height="100" style="fill:red"/>\n\x3c!-- vs --\x3e\n<rect width="100" height="100" fill="red"/>\n'})}),"\n",(0,r.FD)(t.p,{children:["However, because the ",(0,r.Y)(t.code,{children:"style"})," attribute doesn't require quotes between values, given enough presentation attributes, it can increase the size of the document:"]}),"\n",(0,r.Y)(t.pre,{children:(0,r.Y)(t.code,{className:"language-xml",children:'<rect width="100" height="100" style="fill:red;opacity:.5;stroke-dasharray:1;stroke:blue;stroke-opacity:.5"/>\n\x3c!-- vs --\x3e\n<rect width="100" height="100" fill="red" opacity=".5" stroke-dasharray="1" stroke="blue" stroke-opacity=".5"/>\n'})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.Y)(t,{...e,children:(0,r.Y)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>a});var n=o(1098);const r={},s=n.default.createContext(r);function i(e){const t=n.default.useContext(s);return n.default.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.default.createElement(s.Provider,{value:t},e.children)}}}]);