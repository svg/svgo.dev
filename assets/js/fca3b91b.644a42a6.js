"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[8686],{5546:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>a});var n=s(5893),o=s(1151);const i={title:"inlineStyles",svgo:{pluginId:"inlineStyles",defaultPlugin:!0,parameters:{onlyMatchedOnce:{description:"If to only inline styles if the selector matches one element.",default:!0},removeMatchedSelectors:{description:"If to remove the selector and styles from the stylesheet while inlining the styles. This does not remove selectors that did not match any elements.",default:!0},useMqs:{description:"An array of media query conditions to use, such as <code>screen</code>. An empty string signifies all selectors outside of a media query."},usePseudos:{description:"What pseudo-classes and pseudo-elements to use. An empty string signifies all non-pseudo-classes and non-pseudo-elements."}}}},l=void 0,r={id:"plugins/inlineStyles",title:"inlineStyles",description:"Merges styles from ` elements to the style` attribute of matching elements.",source:"@site/.svgo/docs/03-plugins/inlineStyles.mdx",sourceDirName:"03-plugins",slug:"/plugins/inlineStyles",permalink:"/docs/plugins/inlineStyles",draft:!1,unlisted:!1,editUrl:"https://github.com/svg/svgo/tree/main/docs/03-plugins/inlineStyles.mdx",tags:[],version:"current",frontMatter:{title:"inlineStyles",svgo:{pluginId:"inlineStyles",defaultPlugin:!0,parameters:{onlyMatchedOnce:{description:"If to only inline styles if the selector matches one element.",default:!0},removeMatchedSelectors:{description:"If to remove the selector and styles from the stylesheet while inlining the styles. This does not remove selectors that did not match any elements.",default:!0},useMqs:{description:"An array of media query conditions to use, such as <code>screen</code>. An empty string signifies all selectors outside of a media query."},usePseudos:{description:"What pseudo-classes and pseudo-elements to use. An empty string signifies all non-pseudo-classes and non-pseudo-elements."}}}},sidebar:"docsSidebar",previous:{title:"convertTransform",permalink:"/docs/plugins/convertTransform"},next:{title:"mergePaths",permalink:"/docs/plugins/mergePaths"}},c={},a=[];function d(e){const t={code:"code",p:"p",...(0,o.a)(),...e.components};return(0,n.jsxs)(t.p,{children:["Merges styles from ",(0,n.jsx)(t.code,{children:"<style>"})," elements to the ",(0,n.jsx)(t.code,{children:"style"})," attribute of matching elements."]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>r,a:()=>l});var n=s(7294);const o={},i=n.createContext(o);function l(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);